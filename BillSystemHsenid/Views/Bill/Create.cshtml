@model BillSystemHsenid.Models.Bill
@{
    ViewData["Title"] = "Create Bill";
    var items = ViewBag.Items as List<BillSystemHsenid.Models.DefineItems>;
    var currentDate = DateTime.Now.ToString("yyyy-MM-dd");
    var currentTime = DateTime.Now.ToString("hh:mm tt");
}

<h2>Create Bill</h2>


@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<div class="mt-3">
    <label class="col-form-label">Date: @currentDate</label>
</div>
<div class="mt-3">
    <label class="col-form-label">Time: @currentTime</label>
</div>

<form asp-action="Create" method="post">
    <div class="row mt-3 align-items-center">
        <div class="col-md-3">
            <label>Select Item</label>
            <select id="itemDropdown" class="form-control" onchange="updatePrice()">
                <option value="">-- Select an Item --</option>
                @foreach (var item in items)
                {
                    <option value="@item.Id" data-price="@item.Price" data-available-quantity="@item.AvailableQuantity">
                        @item.ItemName
                    </option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label>Price</label>
            <input type="number" id="itemPrice" class="form-control" readonly />
        </div>

        <div class="col-md-3">
            <label>Quantity</label>
            <input type="number" id="quantity" class="form-control" min="1" value="1" oninput="updateAmount()" />
            <small id="quantityError" class="text-danger"></small>
        </div>

        <div class="col-md-3">
            <label>Amount</label>
            <input type="number" id="amount" class="form-control" readonly />
        </div>
    </div>

    <div class="row mt-3 align-items-center">
        <div class="col-md-9"></div>
        <div class="col-md-3">
            <button type="button" class="btn btn-info" onclick="addItem()">Add Item</button>
            <button type="button" class="btn btn-info m-2" onclick="resetForm()">Reset</button>
        </div>
    </div>

    <table class="table mt-3" id="billItemsTable">
        <thead>
            <tr>
                <th>Item</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>


    <div id="billItemsHidden"></div>

    <div class="form-group mt-2">
        <label>Subtotal:</label>
        <input type="number" id="subTotal" name="SubTotal" class="form-control" readonly />
    </div>

    <div class="form-group mt-2">
        <label>Discount (%)</label>
        <input type="number" id="discount" name="Discount" class="form-control" value="0" oninput="calculateTotal()" />
        <small id="discountError" class="text-danger"></small>
    </div>

    <div class="form-group mt-2">
        <label>Tax (12%)</label>
        <input type="number" id="tax" name="Tax" class="form-control" value="12" readonly />
    </div>

    <div class="form-group mt-2">
        <label>Total Amount:</label>
        <input type="number" id="totalAmount" name="TotalAmount" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-success">Save Bill</button>
</form>

<script>
   
    var billItemIndex = 0;

    function updatePrice() {
        let selectedItem = document.getElementById("itemDropdown");
        let price = selectedItem.options[selectedItem.selectedIndex].getAttribute("data-price");
        document.getElementById("itemPrice").value = price;
        updateAmount();
    }

    function updateAmount() {
        let price = parseFloat(document.getElementById("itemPrice").value) || 0;
        let quantity = parseInt(document.getElementById("quantity").value) || 1;
        document.getElementById("amount").value = (price * quantity).toFixed(2);
    }

    function addItem() {
        let itemDropdown = document.getElementById("itemDropdown");
        if (itemDropdown.selectedIndex === 0) {
            alert("Please select an item.");
            return;
        }

        let selectedItem = itemDropdown.options[itemDropdown.selectedIndex].text;
        let selectedItemId = itemDropdown.value;
        let price = parseFloat(document.getElementById("itemPrice").value) || 0;
        let quantity = parseInt(document.getElementById("quantity").value) || 1;
        let availableQuantity = parseInt(itemDropdown.options[itemDropdown.selectedIndex].getAttribute("data-available-quantity")) || 0;
        let amount = parseFloat(document.getElementById("amount").value) || 0;
        let quantityError = document.getElementById("quantityError");

        
        if (quantity > availableQuantity) {
            quantityError.innerText = `Only ${availableQuantity} items are available.`;
            return;
        } else {
            quantityError.innerText = "";
        }

        
        let tableBody = document.getElementById("billItemsTable").getElementsByTagName("tbody")[0];
        let newRow = tableBody.insertRow();
        newRow.innerHTML = `<td>${selectedItem}</td>
                            <td>${quantity}</td>
                            <td>${price}</td>
                            <td>${amount}</td>`;

        
        let hiddenDiv = document.getElementById("billItemsHidden");
        let hiddenInputs = `
            <input type="hidden" name="BillItems[${billItemIndex}].ItemId" value="${selectedItemId}" />
            <input type="hidden" name="BillItems[${billItemIndex}].Quantity" value="${quantity}" />
            <input type="hidden" name="BillItems[${billItemIndex}].Price" value="${price}" />
            <input type="hidden" name="BillItems[${billItemIndex}].Amount" value="${amount}" />
        `;
        hiddenDiv.insertAdjacentHTML('beforeend', hiddenInputs);
        billItemIndex++;

        
        itemDropdown.selectedIndex = 0;
        document.getElementById("itemPrice").value = "";
        document.getElementById("quantity").value = 1;
        document.getElementById("amount").value = "";

        calculateTotal();
    }

    function calculateTotal() {
        let tableBody = document.getElementById("billItemsTable").getElementsByTagName("tbody")[0];
        let rows = tableBody.rows;
        let subTotal = 0;

        for (let row of rows) {
            subTotal += parseFloat(row.cells[3].innerText) || 0;
        }

        document.getElementById("subTotal").value = subTotal.toFixed(2);

        let discount = parseFloat(document.getElementById("discount").value) || 0;
        let discountError = document.getElementById("discountError");
        
        if (discount < 0 || discount >= 100) {
            discount = 0;
            document.getElementById("discount").value = 0;
            
            discountError.innerText =`Discount cannot be 100% or greater and must be at least 0%.`;
        }
        else{

            discountError.innerText = "";
            let discountAmount = (subTotal * discount) / 100;
            let taxAmount = ((subTotal - discountAmount) * 12) / 100;
            let total = subTotal - discountAmount + taxAmount;

            document.getElementById("totalAmount").value = total.toFixed(2);

        }

       
        
    }

    // Reset Data fields and Data table 
    function resetForm() {
        
        let itemDropdown = document.getElementById("itemDropdown");
        itemDropdown.selectedIndex = 0;

        
        document.getElementById("itemPrice").value = "";
        document.getElementById("quantity").value = 1;
        document.getElementById("amount").value = "";
        document.getElementById("quantityError").innerText = "";

        
        let tableBody = document.getElementById("billItemsTable").getElementsByTagName("tbody")[0];
        tableBody.innerHTML = "";


        document.getElementById("billItemsHidden").innerHTML = "";

        
        document.getElementById("subTotal").value = "";
        document.getElementById("discount").value = 0;
        document.getElementById("totalAmount").value = "";

        
        billItemIndex = 0;
    }
</script>
